image: node

stages:
  - test
  - package
  - deploy

before_script:
  - whoami
  - pwd

test site:
  stage: test
  # quando o before_script é definido no job não é executado o global
  before_script:
    # o broken test quebra de link e o wait espera app subir
    - npm install -g broken-link-checker@^0.7.8 wait-on@^2.1.0
  script:
    - cd website
    - npm install && npm run start &
    - wait-on http://localhost:3000/ --timeout 90000
    - blc --recursive --exclude-external http://localhost:3000

vulnerabilities check:
  stage: test
  script:
    - cd website && npm install && npm run scan

package site:
  stage: package
  #enviando o cache
  cache:
    key: site-package
    policy: push
    paths:
      - ./website/build/test-site
  # o artifacts permite fazer o download do build
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 2h20min
    when: always
    paths:
      - ./website/build/test-site
  script:
    - npm --version
    - cd website
    - npm install
    - npm run build


deploy to develop:
  stage: deploy
  #baixando o cache do stage package
  cache:
    key: site-package
    policy: pull
  #quando o before_script é definido no job não é executado o global
  before_script:
    - npm install -g surge
  script:
    - surge --project ./website/build/test-site --domain missaodevops-fernando.surge.sh
  # after_script é executado mesmo quando o job falha
  after_script:
    - ls -la
    - ls -la website/build/test-site
  environment:
    name: staging
    url: http://missaodevops-fernando.surge.sh
  only:
  - develop
